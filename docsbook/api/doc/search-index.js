var searchIndex = new Map(JSON.parse('[["daemon",{"t":"FGPPPPPPNNNNNNNCNNNNNNNNNNNNNHNNNNHHHHNHNNNNNNNFNNNNNONNNNNNNNNNNNN","n":["Daemon","DaemonEvent","MetricsFinish","MetricsStart","ShutdownBegin","ShutdownComplete","WalFlushFinish","WalFlushStart","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","config","deref","","deref_mut","","drop","","eq","equivalent","","","fmt","from","","init","","","into","","looptask_metrics","looptask_wal_flush","pal_emit","run","","take_events","to_owned","try_from","","try_into","","type_id","","Config","borrow","borrow_mut","clone","clone_into","clone_to_uninit","config_path","deref","deref_mut","deserialize","drop","fmt","from","init","into","load","to_owned","try_from","try_into","type_id"],"q":[[0,"daemon"],[47,"daemon::config"],[67,"daemon::pal"],[68,"core::fmt"],[69,"anyhow"],[70,"scheduler::task"],[71,"alloc::vec"],[72,"core::result"],[73,"core::any"],[74,"alloc::string"],[75,"serde::de"],[76,"std::path"],[77,"core::convert"]],"i":"``f00000Af101111`0101011111101`0101````0`1010101`Ad000000000000000000","f":"````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}`{l{{b{c}}}{}}0{l{{b{dc}}}{}}0{lh}0{{{b{f}}{b{f}}}n}{{b{b{c}}}n{}}00{{{b{f}}{b{dA`}}}Ab}{cc{}}0{Ad{{Ah{Af}}}}{{}l}0{{}c{}}0{Ajh}0{fh}{{Adn}{{Ah{h}}}}{{Afn}{{Ah{h}}}}{{}{{Al{f}}}}{bc{}}{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{bB`}0`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ad}}}Ad}{{b{b{dc}}}h{}}{{bj}h}{AdBb}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{An{Ad}}}Bd}{lh}{{{b{Ad}}{b{dA`}}}Ab}{cc{}}{{}l}{{}c{}}{c{{Ah{Ad}}}{{Bh{Bf}}}}{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bB`}","D":"Cb","p":[[1,"reference",null,null,1],[0,"mut"],[6,"DaemonEvent",0,67],[1,"unit"],[1,"u8"],[1,"usize"],[1,"bool"],[5,"Formatter",68],[8,"Result",68],[5,"Config",47],[5,"Daemon",0],[8,"Result",69],[5,"TaskContext",70],[5,"Vec",71],[6,"Result",72,null,1],[5,"TypeId",73],[5,"String",74],[10,"Deserializer",75],[5,"Path",76],[10,"AsRef",77]],"r":[[1,67],[2,67],[3,67],[4,67],[5,67],[6,67],[7,67],[9,67],[11,67],[12,67],[13,67],[14,67],[17,67],[19,67],[21,67],[22,67],[23,67],[24,67],[25,67],[26,67],[28,67],[31,67],[33,67],[39,67],[40,67],[42,67],[44,67],[46,67]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACoABwAJABIAHwABACkABgAxAAQANwAEAD0AAABAAAMA","P":[[8,"T"],[12,""],[13,"T"],[14,""],[16,"T"],[20,""],[23,"K"],[26,""],[27,"T"],[29,""],[32,"U"],[34,""],[40,"T"],[41,"U,T"],[43,"U"],[45,""],[48,"T"],[50,""],[51,"T"],[52,""],[54,"T"],[56,"__D"],[57,""],[59,"T"],[60,""],[61,"U"],[62,"P"],[63,"T"],[64,"U,T"],[65,"U"],[66,""]]}],["docsbookgen",{"t":"SH","n":["TOOL_NAME","tool_name"],"q":[[0,"docsbookgen"]],"i":"``","f":"{{}b}{{}{{b{d}}}}","D":"f","p":[[1,"reference",null,null,1],[1,"str"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["metrics",{"t":"SH","n":["PLACEHOLDER","get_placeholder"],"q":[[0,"metrics"]],"i":"``","f":"{{}b}{{}{{b{d}}}}","D":"f","p":[[1,"reference",null,null,1],[1,"str"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["scheduler",{"t":"PEEEEEEEEGEFNNNNNNNNNNNNNNNNNNNCNHCNCCCNNNNNNNNKMMFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNSSFFNNNNNNNNNNNNNNNNNNNNNNNNNONNNONONNNNNOONNNNNNNNPPPPPPPGPNNNNNNNNNNNNNNNNOOPPPPPPFGFIGPPNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOONOOONNNNNNNNNNNNNNNN","n":["Failed","IoSource","ReadyEntry","ReadyQueue","Scheduler","SchedulerState","SystemCall","Task","TaskContext","TaskEvent","TaskId","WaitMap","borrow","","borrow_mut","","complete","complete_io","default","deref","","deref_mut","","drop","","from","","init","","into","","io","new","pal_emit","ready_queue","remove_waiter","scheduler","syscall","task","try_from","","try_into","","type_id","","wait_for","wait_io","IoSource","id","raw_fd","ReadyEntry","ReadyQueue","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmp","contains","default","deref","","deref_mut","","drop","","eq","fmt","force_push","from","","init","","into","","is_empty","len","new","partial_cmp","pop","pri","push","seq","tid","to_owned","try_from","","try_into","","type_id","","PRI_DEFAULT","PRI_SYSTEM","Scheduler","SchedulerState","borrow","","borrow_mut","","cancel_task","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","dump_state","fmt","from","","init","","into","","io_handle","new","next_id","ready_is_empty","ready_len","ready_push_duplicate_for_test","ready_queue_len","run","sleepers","spawn","spawn_system","spawn_with_deps","spawn_with_priority","start","states","task_count","task_state","to_owned","try_from","","try_into","","type_id","","Cancel","Done","IoWait","Join","JoinTimeout","Log","Sleep","SystemCall","Yield","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","dur","target","Cancelled","Failed","Finished","PendingDependencies","Ready","Running","Task","TaskCompletionReason","TaskContext","TaskId","TaskState","WorkDone","WorkSkipped","borrow","","","","borrow_mut","","","","cancelled","clone","","","clone_into","","","clone_to_uninit","","","deref","","","","deref_mut","","","","drop","","","","eq","","fmt","","from","","","","handle","init","","","","into","","","","is_cancelled","pri","state","syscall","syscall_tx","tid","","to_owned","","","try_from","","","","try_into","","","","type_id","","","","yield_now"],"q":[[0,"scheduler"],[47,"scheduler::io"],[50,"scheduler::ready_queue"],[93,"scheduler::scheduler"],[144,"scheduler::syscall"],[169,"scheduler::syscall::SystemCall"],[171,"scheduler::task"],[254,"scheduler::wait_map"],[255,"alloc::vec"],[256,"scheduler::pal"],[257,"core::result"],[258,"core::any"],[259,"std::os::fd::raw"],[260,"core::cmp"],[261,"core::fmt"],[262,"core::option"],[263,"crossbeam_channel::channel"],[264,"core::ops::function"],[265,"core::marker"],[266,"std::thread::scoped"],[267,"std::sync::barrier"],[268,"alloc::sync"],[269,"std::collections::hash::map"],[270,"core::time"],[271,"may::join"]],"i":"Af```````````0f10000101010101010`0``0```10101000`An0``BbBh101111001010101101010100001010111101010````C`Cb101000110101010101010110111010111110010101010Dh000000`00000000000000000Dj0E`0j000`````11Dn21Cf132013203203201320132013203232132011320132001100103201320132013200","f":"````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{df}}hj}{{n{{l{h}}j}}}}{{{b{df}}A`}{{l{h}}}}{{}f}{Ab{{b{c}}}{}}0{Ab{{b{dc}}}{}}0{AbAd}0{cc{}}0{{}Ab}0{{}c{}}0`6{AfAd}`{{{b{df}}hh}Ah}```{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0{{{b{df}}hh}Ad}{{{b{df}}A`h}Ad}`{{{b{An}}}A`}{{{b{An}}}B`}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Bb}}}Bb}{{b{b{dc}}}Ad{}}{{bBd}Ad}{{{b{Bb}}{b{Bb}}}Bf}{{{b{Bh}}h}Ah}{{}Bh}{Ab{{b{c}}}{}}0{Ab{{b{dc}}}{}}0{AbAd}0{{{b{Bb}}{b{Bb}}}Ah}{{{b{Bb}}{b{dBj}}}Bl}{{{b{dBh}}Bb}Ad}{cc{}}0{{}Ab}0{{}c{}}0{{{b{Bh}}}Ah}{{{b{Bh}}}Ab};{{{b{Bb}}{b{Bb}}}{{Bn{Bf}}}}{{{b{dBh}}}{{Bn{h}}}}{BbBd}8{BbA`}{Bbh}{bc{}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0{{}Bd}0``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{dC`}}h}Ad}{{{b{Cb}}}Cb}{{b{b{dc}}}Ad{}}{{bBd}Ad}{{}C`}{Ab{{b{c}}}{}}0{Ab{{b{dc}}}{}}0{AbAd}0{{{b{C`}}}Cb}{{{b{Cb}}{b{dBj}}}Bl}{cc{}}0{{}Ab}0{{}c{}}0{{{b{C`}}}{{Cd{A`}}}}9{Cbh}{{{b{C`}}}Ah}{{{b{C`}}}Ab}{{{b{dC`}}h}Ad}{CbAb}{{{b{dC`}}}{{l{h}}}}1{{{b{dC`}}c}h{{Ch{Cf}}Cj}}0{{{b{dC`}}{b{{Cl{h}}}}c}h{{Ch{Cf}}Cj}}{{{b{dC`}}Bdc}h{{Ch{Cf}}Cj}}{{{b{dC`}}{b{Cn}}{Db{D`}}}{{Dd{{l{h}}}}}}{CbDf}6{{{b{C`}}h}{{Bn{j}}}}{bc{}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0`````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Dh}}}Dh}{{b{b{dc}}}Ad{}}{{bBd}Ad}{Ab{{b{c}}}{}}{Ab{{b{dc}}}{}}{AbAd}{{{b{Dh}}{b{dBj}}}Bl}{cc{}}{{}Ab}{{}c{}}?>=<{DjDl}{Djh}`````````````====<<<<{DnAh}{{{b{E`}}}E`}{{{b{j}}}j}{{{b{Cf}}}Cf}>>>===<<<<;;;;::::{{{b{E`}}{b{E`}}}Ah}{{{b{j}}{b{j}}}Ah}{{{b{E`}}{b{dBj}}}Bl}{{{b{j}}{b{dBj}}}Bl}<<<<{DnEb}<<<<;;;;{{{b{Cf}}}Ah}{DnBd}{Dnj}{{{b{Cf}}Dh}Ad}{CfCd}{Dnh}{Cfh}{bc{}}00{c{{Aj{e}}}{}{}}000{{}{{Aj{c}}}{}}000{bAl}000{{{b{Cf}}}Ad}","D":"L`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"WaitMap",0,254],[8,"TaskId",171],[6,"TaskState",171],[5,"Vec",255],[1,"tuple",null,null,1],[1,"u64"],[1,"usize"],[1,"unit"],[6,"TaskEvent",0,256],[1,"bool"],[6,"Result",257,null,1],[5,"TypeId",258],[10,"IoSource",47],[8,"RawFd",259],[5,"ReadyEntry",50],[1,"u8"],[6,"Ordering",260],[5,"ReadyQueue",50],[5,"Formatter",261],[8,"Result",261],[6,"Option",262,null,1],[5,"Scheduler",93],[5,"SchedulerState",93],[5,"Sender",263],[5,"TaskContext",171],[10,"FnOnce",264],[10,"Send",265],[1,"slice"],[5,"Scope",266],[5,"Barrier",267],[5,"Arc",268,null,1],[5,"ScopedJoinHandle",266],[5,"HashMap",269],[6,"SystemCall",144],[15,"JoinTimeout",169],[5,"Duration",270],[5,"Task",171],[6,"TaskCompletionReason",171],[5,"JoinHandle",271]],"r":[[0,256],[1,47],[2,50],[3,50],[4,93],[5,93],[6,144],[7,171],[8,171],[9,256],[10,171],[11,254],[12,256],[13,254],[14,256],[15,254],[16,254],[17,254],[18,254],[19,256],[20,254],[21,256],[22,254],[23,256],[24,254],[25,256],[26,254],[27,256],[28,254],[29,256],[30,254],[32,254],[35,254],[39,256],[40,254],[41,256],[42,254],[43,256],[44,254],[45,254],[46,254]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJ4AGwAAAAAAAgAHAAsAAAANAAMAEwAGABwAAQAgAAAAIwAAACUACAA1AAcAPgAIAEoAAQBRAAAAVwAGAGIAAwBnAAkAcgAAAHUAAQCKAAYAmgAIAKQAAACmAAcAtwAJAMIAGADgAAMA7AAAAO4ADwA=","P":[[12,"T"],[16,""],[19,"T"],[23,""],[25,"T"],[27,""],[29,"U"],[32,""],[39,"U,T"],[41,"U"],[43,""],[52,"T"],[56,""],[57,"T"],[58,""],[62,"T"],[66,""],[71,"T"],[73,""],[75,"U"],[77,""],[86,"T"],[87,"U,T"],[89,"U"],[91,""],[97,"T"],[101,""],[103,"T"],[104,""],[106,"T"],[110,""],[114,"T"],[116,""],[118,"U"],[120,""],[129,"F"],[133,""],[137,"T"],[138,"U,T"],[140,"U"],[142,""],[153,"T"],[155,""],[156,"T"],[157,""],[158,"T"],[160,""],[162,"T"],[163,""],[164,"U"],[165,"T"],[166,"U,T"],[167,"U"],[168,""],[184,"T"],[192,""],[196,"T"],[199,""],[202,"T"],[210,""],[218,"T"],[222,""],[227,"U"],[231,""],[238,"T"],[241,"U,T"],[245,"U"],[249,""]]}],["tinkerbell",{"t":"FNNNNNNOONNNONNNNNNNHONNNNNO","n":["Cli","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","concurrency","config","deref","deref_mut","drop","dump_state","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","quantum","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbose"],"q":[[0,"tinkerbell"],[28,"clap_builder::builder::command"],[29,"core::option"],[30,"alloc::string"],[31,"core::fmt"],[32,"clap_builder::parser::matches::arg_matches"],[33,"clap_builder"],[34,"core::result"],[35,"clap_builder::util::id"],[36,"anyhow"],[37,"core::any"]],"i":"`h000000000000000000`0000000","f":"`{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0{hj}{hl}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nA`}{hAb}{{{d{h}}{d{fAd}}}Af}{cc{}}{{{d{Ah}}}{{Al{hAj}}}}{{{d{fAh}}}{{Al{hAj}}}}{{}{{j{An}}}}{{}n}{{}c{}}{{}{{B`{A`}}}}={c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{dBb}{{{d{fh}}{d{Ah}}}{{Al{A`Aj}}}}{{{d{fh}}{d{fAh}}}{{Al{A`Aj}}}}{hBd}","D":"Ab","p":[[5,"Command",28],[1,"reference",null,null,1],[0,"mut"],[5,"Cli",0],[6,"Option",29,null,1],[5,"String",30],[1,"usize"],[1,"unit"],[1,"bool"],[5,"Formatter",31],[8,"Result",31],[5,"ArgMatches",32],[8,"Error",33],[6,"Result",34,null,1],[5,"Id",35],[8,"Result",36],[5,"TypeId",37],[1,"u8"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMABgAAAAAAAgAFAAoAAgAOAAAAEAADABcABAA=","P":[[3,"T"],[5,""],[9,"T"],[11,""],[14,"T"],[15,""],[19,"U"],[20,""],[22,"U,T"],[23,"U"],[24,""]]}],["wal",{"t":"SH","n":["PLACEHOLDER","get_placeholder"],"q":[[0,"wal"]],"i":"``","f":"{{}b}{{}{{b{d}}}}","D":"f","p":[[1,"reference",null,null,1],[1,"str"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2499,225,225,6858,1520,217]}